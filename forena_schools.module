<?php

function forena_schools_autoload($class) {
  if (strpos($class, 'FrxSchools') !==FALSE || strpos($class, 'ForenaSchool')!==FALSE) {
    include drupal_get_path('module', 'forena_schools') . '/inc/' . $class . '.inc';
  }
}
spl_autoload_register('forena_schools_autoload');

function forena_schools_menu() {
	$items['assessments'] = array(
	  'type' => MENU_NORMAL_ITEM,
	  'title' => t('Assessments'),
	  'access callback' => 'forena_schools_access',
	  'access arguments' => array('teacher'),
	  'page callback' => 'forena_schools_assessments',
	  'file' => 'inc/common.inc',
	);

	$items['flex'] = array(
	  'type' => MENU_CALLBACK,
	  'access callback' => TRUE,
	  'page callback' => 'forena_schools_flex',
	  'file' => 'inc/common.inc',
	);

	$items['flexpopup'] = array(
	  'type' => MENU_CALLBACK,
	  'access callback' => TRUE,
	  'page callback' => 'forena_schools_flex',
	  'page arguments' => array(1, TRUE),
	  'file' => 'inc/common.inc',
	);

	$items['flexServices'] = array(
	  'type' => MENU_CALLBACK,
	  'access callback' => TRUE,
	  'page callback' => 'forena_schools_data',
	  'file' => 'inc/common.inc',
	);

	$items['admin/config/system/forena-schools'] = array(
	  'type' => MENU_NORMAL_ITEM,
	  'title' => 'Forena Schools',
		'description' => 'Run SIS import jobs',
	  'page callback' => 'drupal_get_form',
	  'page arguments' => array('forena_schools_import_form'),
	  'access arguments' => array('administer forena schools'),
	  'file' => 'forena_schools.admin.inc',
	);

	$items['admin/config/system/forena-schools/imports'] = array(
	  'type' => MENU_DEFAULT_LOCAL_TASK,
	  'title' => 'Import Jobs',
	  'page callback' => 'drupal_get_form',
	  'page arguments' => array('forena_schools_import_form'),
	  'access arguments' => array('administer forena schools'),
	  'file' => 'forena_schools.admin.inc',
	);

	$items['admin/config/system/forena-schools/import-delete'] = array(
	  'title' => 'Delete job',
	  'page callback' => 'drupal_get_form',
	  'page arguments' => array('forena_schools_import_delete_form'),
	  'access arguments' => array('administer forena schools'),
	  'file' => 'forena_schools.admin.inc',
	);

	$items['admin/config/system/forena-schools/import'] = array(
	  'type' => MENU_CALLBACK,
	  'title' => 'Import SIS Data',
	  'page callback' => 'drupal_get_form',
	  'page arguments' => array('forena_schools_import_edit_form'),
	  'access arguments' => array('administer forena schools'),
	  'file' => 'forena_schools.admin.inc',
	);

	$items['forenaschools/schoolyear/%/edit'] = array(
	  'type' => MENU_CALLBACK,
	  'access callback' => 'forena_schools_access',
	  'access arguments' => array('sys_admin'),
	  'page callback' => 'drupal_get_form',
	  'page arguments' => array('forena_schools_school_year_form', 2),
	  'file' => 'forena_schools.admin.inc',
	);

	$items['forenaschools/schoolyear/%/delete'] = array(
	  'type' => MENU_CALLBACK,
	  'access callback' => 'forena_schools_access',
	  'access arguments' => array('sys_admin'),
	  'page callback' => 'drupal_get_form',
	  'page arguments' => array('forena_schools_year_delete_form', 2),
	  'file' => 'forena_schools.admin.inc',
	);

	$items['forenaschools/schoolyear/add'] = array(
	  'type' => MENU_CALLBACK,
	  'access callback' => 'forena_schools_access',
	  'access arguments' => array('sys_admin'),
	  'page callback' => 'drupal_get_form',
	  'page arguments' => array('forena_schools_school_year_form', ''),
	  'file' => 'forena_schools.admin.inc',
	);

	$items['forenaschools/test/%/delete'] = array(
	  'type' => MENU_CALLBACK,
	  'access callback' => 'forena_schools_access',
	  'access arguments' => array('sys_admin'),
	  'page callback' => 'drupal_get_form',
	  'page arguments' => array('forena_schools_test_delete_form', 2),
	  'file' => 'forena_schools.test.inc',
	);

	// Admin Menus
	$items['forenaschools/building/edit'] = array(
	  'type' => MENU_CALLBACK,
	  'title' => 'Edit Building',
	  'access callback' => 'forena_schools_access',
	  'access arguments' => array('sys_admin'),
	  'page callback' => 'drupal_get_form',
	  'page arguments' => array('forena_schools_building_form', 3),
	  'file' => 'forena_schools.admin.inc',
	);



	$items['admin/config/people/forena-schools-impersonate'] = array(
	  'type' => MENU_NORMAL_ITEM,
	  'title' => 'Impersonate User (Forena Schools)',
	  'description' => t('Become a different user in Forena Schools'),
	  'access arguments' => array('forena_schools impersonate'),
	  'page callback' => 'drupal_get_form',
	  'page arguments' => array('forena_schools_impersonate_form'),
	  'file' => 'forena_schools.admin.inc',
	);

	$items['forenaschools/import/group'] = array(
	  'title' => 'Import Student Groups',
	  'type' => MENU_NORMAL_ITEM,
	  'access arguments' => array('import student groups'),
	  'page callback' => 'drupal_get_form',
	  'page arguments' => array('forena_schools_import_groups'),
	  'file' => 'forena_schools.groups.inc',
	);

	$items['profile/add'] = array(
	  'title' => 'Create New Profile',
	  'type' => MENU_CALLBACK,
	  'access callback' => 'forena_schools_access',
	  'access arguments' => array('dist_admin'),
	  'page callback' => 'drupal_get_form',
	  'page arguments' => array('forena_schools_profile_form', ''),
	  'file' => 'forena_schools.profiles.inc',
	);

	$items['profile/%/edit'] = array(
	  'title' => 'Edit Profile',
	  'type' => MENU_CALLBACK,
	  'access callback' => 'forena_schools_access',
	  'access arguments' => array('dist_admin'),
	  'page callback' => 'drupal_get_form',
	  'page arguments' => array('forena_schools_profile_form', 1),
	  'file' => 'forena_schools.profiles.inc',
	);

	$items['profile/%/delete'] = array(
	  'title' => 'Edit Profile',
	  'type' => MENU_CALLBACK,
	  'access callback' => 'forena_schools_access',
	  'access arguments' => array('dist_admin'),
	  'page callback' => 'drupal_get_form',
	  'page arguments' => array('forena_schools_profile_delete', 1),
	  'file' => 'forena_schools.profiles.inc',
	);


	$items['group/%/edit'] = array(
	  'title' => 'Edit',
	  'type' => MENU_LOCAL_TASK,
	  'access callback' => 'forena_schools_access',
	  'access arguments' => array('dist_admin'),
	  'page callback' => 'drupal_get_form',
	  'page arguments' => array('forena_schools_group_form', 1),
	  'file' => 'forena_schools.groups.inc',
	);

	$items['group/%/delete'] = array(
	  'title' => 'Delete Group',
	  'type' => MENU_LOCAL_TASK,
	  'access callback' => 'forena_schools_access',
	  'access arguments' => array('teacher'),
	  'page callback' => 'drupal_get_form',
	  'page arguments' => array('forena_schools_group_delete', 1),
	  'file' => 'forena_schools.groups.inc',
	);

	$items['student/%/entry/%/%/%'] = array(
	  'title' => 'Test',
	  'type' => MENU_CALLBACK,
	  'access callback' => 'forena_schools_access',
	  'access arguments' => array('dist_admin'),
	  'page callback' => 'drupal_get_form',
	  'page arguments' => array('forena_schools_single_entry_form',1, 3, 4, 5),
	  'file' => 'forena_schools.test_entry.inc',
	);
	return $items;
}

function forena_schools_theme() {
  return array( 'forena_schools_flex_popup' => array(
      'variables' => array('item' => NULL, 'feed' => 0),
    ),
  );
}

function forena_schools_access($security) {
	require_once 'inc/common.inc';
	return ForenaSchools::instance()->access($security);
}

/**
 *
 * Enter description here ...
 * @param unknown_type $app
 */
function forena_schools_assessments() {
  $m_path = drupal_get_path('module', 'forena_schools');
	drupal_add_js($m_path . '/flex/swfobject.js');
  $fs = ForenaSchools::instance();

		if ($fs->access('dist_admin')) {
			$app = 'DistrictDashboard';
		}
		elseif ($fs->access('bldg_admin')) {
			$app = 'BuildingDashboard';
		}
		elseif ($fs->access('teacher')) {
			$app = 'PrimaryTeacherDashboard';
		}
		else {
			drupal_access_denied();
		}

	$output = forena_report($app);
  return $output;
}

function forena_schools_connection_string() {
	global $databases;
	$db = $databases['default']['default'];
	$db_name = $db['database'];
	$user_name = $db['username'];
	$password = $db['password'];
	$host = $db['host'];
	$port = $db['port'];
	$uri = "host =$host dbname=$db_name user=$user_name password=$password";
	if ($port) $uri .= " port=$port";
	return $uri;
}

/**
 * Implementation of hook_forena_repos_alter
 * @param $repos
 */
function forena_schools_forena_repos_alter(&$repos) {
	$m_path = drupal_get_path('module', 'forena_schools');
	$repos['ims'] = array(
	  'path' => $m_path . '/data_blocks',
	  'title' => 'Forena Schools',
		'uri' => forena_schools_connection_string(),
	  'data provider' => 'FrxPostgres',
	  'debug' => @$_GET['debug']|| @$_GET['appdebug'],
	  'postgres_xml' => TRUE,
	  'access callback' => 'forena_schools_access',
	  'user callback' => 'forena_schools_current_login',
	  'search path' => 'public,import',
  );

  $repos['menus'] = array(
    'path' => $m_path . '/menus',
    'title' => 'Forena Schools Menus',
    'uri' => "file://$m_path/menus",
    'data provider' => 'FrxFiles',
    'access callback' => 'forena_schools_access',
  );
}

/**
 * Implementation of hook_forena_parameters_alter
 * @param $report_name String implementation of report name
 * @param $parms array parameters to be modified.
 */
function forena_schools_forena_parameters_alter($report_name, &$parms) {
  require_once 'inc/ForenaSchools.inc';
  $o = ForenaSchools::instance();
  static $sec = '';
  static $filter = '';
  if (!$filter) $filter = array();
  if ( !@$parms['school_year']) {
    $school_years = array_keys(ForenaSchools::instance()->schoolYearList());
    $school_year = array_shift($school_years);
    $filter['school_year'] = $school_year;
  }
  if (!$sec) {
    $sec['buildings'] = array_keys($o->userBuildings());
    $sec['grades'] = array_keys($o->userGradeLevels());
    if (forena_schools_access('dist_admin')) {
      $sec['admin'] = 1;
    }
    else {
      $sec['admin'] = 0;
    }
  }
  $filter = array_merge($filter, $parms);
  Frx::Data()->setContext('security', $sec);
  Frx::Data()->setContext('filter', $filter);
}

function forena_schools_current_login() {
	require_once('inc/ForenaSchools.inc');
	$o =  ForenaSchools::instance();
	$user = $o->user;
	return @$user['login'];
}

function forena_schools_render_partial($template,$vars='',$extract=true) {
	$m_path = drupal_get_path('module', 'forena_schools');
  if (is_array($vars) && $extract==true)  {
    extract($vars);
  }
  ob_start();
  include($m_path . "/" . $template.".tpl.php");
  $output = ob_get_contents();
  ob_end_clean();
  return $output;
}

function forena_schools_service($service) {
	$object = null;
	require_once 'inc/ForenaSchools.inc';
	$include_file = drupal_get_path('module', 'forena_schools') . "/services/$service.data.php";
	if (file_exists($include_file)) {
		require_once $include_file;
		if (class_exists($service)) {
			$object = new $service;
		}
	}
	return $object;
}

/**
 * Renders a flex applciation in a popup window without theme
 * @param unknown_type $a
 */
function forena_schools_flex($application, $popup=false) {
  global $base_url;
  $vars = array();
  if (@$_GET['popup']) $popup = TRUE;
  $service = forena_schools_service($application);
  if (!$service) {
  	drupal_not_found();
  }
  else {
  	$vars['title'] = $service->title;
  }
  $m_path = drupal_get_path('module', 'forena_schools');
  $js = array();
  $js[] = $m_path .  '/flex/swfobject.js';
  $js[] = $m_path .  '/inc/pedaflex.js';
  $fvar = $_GET;
  $fvar['dataService'] =  $base_url . '/flexServices';
  $fvar['basePath'] = rtrim($base_url,'/');
  $base_path = $GLOBALS['base_path'];
  $flexPath = "flex/";
  if (@$_GET['debug']=='true') {
  	$flexPath = "bin-debug/";
  }
  $vars['flexPath'] = $flexPath;
  unset($fvar['q']);
  $flashfile = $m_path . '/' . $flexPath . $application . '.swf';
  $vars['flashfile'] = $base_path . $flashfile . '?d=' . filemtime($flashfile);
  $vars['application'] = $application;
  $vars['div_id'] = $application. '_div';
  $vars['flashvars'] = http_build_query($fvar);
  $vars['flashvars_json'] = json_encode($fvar, JSON_FORCE_OBJECT);
  if ($popup) $vars['height']='100%'; else $vars['height']='85%';
  $output = forena_schools_render_partial('flex',$vars);
  if ($popup) {
    $variables= array('content' => $output, 'js' => $js, 'title' =>$vars['title']);
  	$output = theme('forena_schools_flex_popup', $variables);
  	print $output;
  }
  else {
  	foreach ($js as $j) {
     drupal_add_js($j);
  	}
    return $output;
  }
}

function theme_forena_schools_flex_popup($variables) {
	$js = '';
	$suf = variable_get('css_js_query_string', '0');
	if (isset($variables['js'])) foreach($variables['js'] as $j) {
		$js .= "\n".'  <script src="' . base_path() . $j . '?' . $suf . '" language="javascript" type="text/javascript"></script>';
	}
	$variables['scripts'] = $js;
	print forena_schools_render_partial('popup', $variables);
}

function forena_schools_forena_controls() {
	$controls = array();
	$controls[] = array(
    'file' => 'inc/FrxPedagoggleScores.inc',
    'class' => 'FrxPedagoggleScores',
  );

  $controls[] = array(
    'file' => 'inc/FrxSchoolsGroupAdd.inc',
    'class' => 'FrxSchoolsGroupAdd',
  );
  return $controls;
}

function forena_schools_forena_report_directory() {
	return drupal_get_path('module', 'forena_schools') . '/reports';
}

/**
 * Data service for flex applications.
 */
function forena_schools_data() {
  // Determine if the include file is in the path.
	$class = $_REQUEST['service'];
	$method = $_REQUEST['method'];
	$m_path = drupal_get_path('module', 'forena_schools');
	$class_file = $m_path . '/services/'.$class.'.data.php';
  $data_debug = @$_GET['debug'] || @$_GET['appdebug'];
	// Only load the file if the file name exists
	if (file_exists($class_file)) {
	  include_once($class_file);
	  if(class_exists($class)) {
	  	$handler = new $class;
	  }
	  else {
	    $handler = new DataBroker();
	  }
	  $auth = true;
	  if (method_exists($handler,'auth')) {
	  	$auth = call_user_func(array($handler,'auth'));
	  }
	  if ($auth) {
		  if (method_exists($handler,$method)) {
		    //header('Content-type: text/xml');
		    $data = call_user_func(array($handler,$method));
		    if ($data_debug==true && $class!='LogViewer') {
		    	watchdog('Data '. $class . '.' . $method, htmlspecialchars(print_r($_REQUEST,1)). "\n" . htmlspecialchars($data));
		    }
		    print $data;
		  }
		  else {
		    watchdog('error', 'Method Not Found',print_r($_REQUEST,1));
		    print "<pre>$method: Method Not Found</pre>";
		  }
	  } else {
	  	watchdog('error', 'Data Service Access Denied',"Service: $class \n Method:$method \n");
	  	print "<pre>Access Denied</pre>";
	  }
	}
	else {
	    watchdog('debug Data Service',  'Data Service  Not Found',print_r($_REQUEST,1));
		print "<pre>$class: Service Not Found</pre>";
	}
  drupal_get_messages();
}

/**
 * Implementation of hook_perm
 *
 */
function forena_schools_permission() {
  $perms = array(
    'administer forena schools' => array('title' => t('Administer Forena Schools')),
    'manage profiles' => array('title' => t('Administer Forena Reports')),
    'manage assessments' => array('title' => t('Define Assessments')),
    'import assessments' => array('title' => t('Import Assessments')),
    'import student groups' => array('title' => t('Import Student Groups')),
    'forena_schools impersonate' => array('title' => t('Impersonate User')),
    );
  return $perms;
}

function forena_schools_run_import_batch($title, $script, &$context) {
  require_once('inc/ForenaSchoolsImportJob.inc');
  ForenaSchoolsImportJob::instance()
	  ->processImport($script, $context);
}

function forena_schools_start_import_batch($title, $script, &$context) {
	$context ['message'] = 'Starting '. check_plain($title);
	require_once('inc/ForenaSchoolsImportJob.inc');
  ForenaSchoolsImportJob::instance()
	  ->preProcessImport($script, $context);
}

function forena_schools_cronapi($op, $job=NULL) {
	$jobs = variable_get('forena_schools_import_jobs', array());
	$items = array();
	if ($jobs) foreach ($jobs as $i => $job) {
		if (@$job['cron_rule']) {
			$items['forena_schools_import_' . $i] = array(
			  'description' => $job['title'],
			  'rule' => $job['cron_rule'],
			  'callback' => 'forena_schools_import_cron',
			  'arguments' => array($i),
			);
		}
	}
	return $items;
}

/**
 * Cron hook
 * @param $job_num
 */
function forena_schools_import_cron($job_num) {
	require_once 'inc/ForenaSchoolsImport.inc';
	$jobs = variable_get('forena_schools_import_jobs', array());
	$job = $jobs[$job_num];
  $ops[] = array('forena_schools_run_import_batch', array($job['title'], $job['script']));
	$batch = array(
		  'title' => t('Running Forena Schools Import jobs'),
		  'operations' => $ops,
		);
	batch_set($batch);
	if (is_callable('drush_backend_batch_process')) {
	 drush_backend_batch_process();
	}
	else {
	  batch_process('forena_schools_import');
	}
}

function forena_schools_cas_user_alter(&$cas_user) {
	$cas_user['name'] = strtolower($cas_user['name']);
}

/**
 * Facilitates the adding of data to a specified group. Also new groups can be created.
 * @param unknown_type $form
 * @param unknown_type $form_state
 * @param unknown_type $groups
 * @param unknown_type $ids
 */
function forena_schools_group_add_js($formid, &$form_state, $groups = array(), $ids=array(), $data=array()) {
  $form['defaults'] = array(
    '#type' => 'value',
    '#value' => $data,
  );
  $form['all_ids'] = array(
    '#type' => 'value',
    '#value' => $ids,
  );

  $form['ids_json'] = array(
    '#type' => 'hidden',
    '#value' => '',
  );

  $form['group'] = array(
    '#type' => 'select',
    '#options' => $groups,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Add',
  );
  return $form;
}

function forena_schools_group_add_js_submit($form, &$form_state) {
  $g = ForenaSchoolsGroup::instance();
  $defaults = $form_state['values']['defaults'];
  // Determine whether we have selected members to add.
  if ($form_state['values']['ids_json']) {
    $ids = json_decode( $form_state['values']['ids_json']);
  }
  else {
    $ids = &$form_state['values']['all_ids'];
  }

  // Make sure we have a groupl
  $new_group = FALSE;
  if ($form_state['values']['group']) {
    $g->loadByGroupId($form_state['values']['group']);
    $ids = array_merge($g->members,$ids);
  }
  else {
    $user = ForenaSchools::instance()->user;
    $person_id = $user['person_id'];
    $group = array(
      'name' => 'New Group',
      'category' => '',
      'bldg_id' => $defaults['bldg_id'],
      'school_year' => $defaults['school_year'],
      'group_type' => $defaults['group_type'],
      'source' => 'user',
      'owner_id' => $person_id
    );
    $g->save($group);
    $group_id = $g->group['group_id'];
    $form_state['redirect'] = array('group/' . $group_id. '/edit');
  }
  $g->saveMembers($ids);
}

// Empty function to handle form cancels.
function forena_schools_form_cancel($form, &$form_state) {

}


