<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE root [
<!ENTITY nbsp "&#160;">
]>
<html xmlns:frx="urn:FrxReports">
<head>
<title>Connecting to External Databases</title>
<frx:category></frx:category>
<frx:options hidden="1" form=""></frx:options>
<frx:parameters>
</frx:parameters>
<frx:docgen>
</frx:docgen>
<frx:fields>
  <frx:field id="title" link="reports/{name}"></frx:field>
</frx:fields>
</head>
<body>
  <p>Data connections may be defined in one of two ways. &nbsp;Using
    the Forena Configuration menus, data connections can be
    performed&nbsp;</p>
  <h2>Define using Forena Configuration Screens</h2>
  <p>Visit the Data tab under Forena Configuration which can be
    found in the usual configuration menu in Drupal. &nbsp;Here you
    should be able to add a new connection. &nbsp;Note that prior to
    defining a new connection, you'll need to create a folder to store
    sql files on the file system somewhere . &nbsp;This directory should
    not be in a place inside of your web servers document root, but if
    you do, take steps to make sure that files in this directory is not
    writeable by the web user.&nbsp;</p>
  <p>See the videos on the project home page for further information
    ( http://drupal.org/project/forena )&nbsp;</p>
  <p>&nbsp;</p>
  <h2>Define in settings.php file(s)</h2>
  <p>Additional data block repositories can be created to allow
    forena to report against most applications. To create repositories
    you'll need to perform the following basic steps:</p>
  <p>1. Edit your drupal site's settings.php to specificy the
    locations of the additional data block repositories.</p>
  <p>2. Manually create the directory</p>
  <p>2. Create a settings.php file in the repository's directory to
    tell forena how to interpret the data blocks for that
    repository.&nbsp;</p>
  <p>3. Create new data block files as necessary to be used in
    reports.</p>
  <h2>Editing your drupal site's settings.php file</h2>
  <p>The list of additional repositories is stored in a php gobal
    variable called $_forena_repositories.&nbsp; The following example
    code illustrates the lines that would need to be added to your
    drupal site's settings.php file to create a new data block
    repository.</p>
  <pre>global $_forena_repositories;
<br />$_forena_repositories['local'] = array('path' =&gt; 'sites/default/local_blocks', 'title' =&gt; 'Site Specific Data Blocks');<br />
</pre>
  <h2>Creating the settings.php file in the repository directory</h2>
  <p>
    In the above example, to finish the <em>local</em>repository, we'd
    need to create a settings.php in the sites/default/local_blocks
    directory.&nbsp; An easy way to do this would be to make a copy of
    the settings.php file delivered with forena in the repos/drupal
    sub-directory of the forena, and modify the appropriate
    settings.&nbsp; The settings.php should set all of the appropriate
    configuration settings for the repository, and is generally of the
    form:
  </p>
  <p>
    $conf[' <em>parameter name</em>'] = <em>value</em>;
  </p>
  <p>
    where <em>parameter name</em>and <em>value</em>are replaced
    according to the configuration setting you wish to change. (Again,
    see the settings.php files in the repostiories directory provided
    with forena)
  </p>
  <p>The following table illustrates the options provided</p>
  <table border="0" cellpadding="2">
    <tbody>
      <tr>
        <th style="width: 30%;" align="left" valign="top">data
          provider</th>
        <td style="width: 70%;" scope="col" align="left" valign="top">The
          name of the class that will be used to&nbsp; provide the data
          blocks.&nbsp; Data engine plugins delivered with forena
          include: FrxDrupal, FrxOracle, FrxPDO orFrxFiles</td>
      </tr>
      <tr>
        <th style="width: 30%;" align="left" valign="top">access
          callback</th>
        <td style="width: 70%;" scope="col" align="left" valign="top">The
          function that will be used check permissions.&nbsp; To use
          drupal security access rights specify a value of
          user_access.&nbsp; Custom modules may provide their own
          functions for testing security.</td>
      </tr>
      <tr>
        <th style="width: 30%;" align="left" valign="top">user
          callback</th>
        <td style="width: 70%;" scope="col" align="left" valign="top">The
          function that will be used to determine the current
          user.&nbsp;&nbsp; The current_user argument is passed to all
          data blocks so that you can write queries that are specific to
          the user logged in.</td>
      </tr>
      <tr>
        <th style="width: 30%;" align="left" valign="top">debug</th>
        <td style="width: 70%;" scope="col" align="left" valign="top">Set
          to TRUE to write the raw data queries and their results to the
          watchdog log.&nbsp; This can be useful for debugging data
          blocks in a development environment.</td>
      </tr>
      <tr>
        <th style="width: 30%;" align="left" valign="top">uri</th>
        <td style="width: 70%;" scope="col" align="left" valign="top">The
          connection uri for the datablock.&nbsp; This is data engine
          specific.</td>
      </tr>
      <tr>
        <th style="width: 30%;" align="left" valign="top">user</th>
        <td style="width: 70%;" scope="col" align="left" valign="top">The
          user name used to establish the connection to the data
          provider (specific data engines only)</td>
      </tr>
      <tr>
        <th style="width: 30%;" align="left" valign="top">password</th>
        <td style="width: 70%;" scope="col" align="left" valign="top">The
          password used to establish a connection to data provider
          (specific data engines only)</td>
      </tr>
      <tr>
        <th style="width: 30%;" align="left" valign="top">oracle_xml</th>
        <td style="width: 70%;" scope="col" align="left" valign="top">Set
          to true, when you want to use oracles native xml
          functions.&nbsp; In order to use this you must first install a
          function called f_forena_xml into your database schema.&nbsp;
          You'll find the .sql file which can be used to install this
          function included in the forena distribution.</td>
      </tr>
    </tbody>
  </table>
  <h2>Creating Data Blocks</h2>
  <p>Once your repository is created you can build data block
    files.&nbsp; Although the most common format of these files are
    .sql.&nbsp; The actual format of these files is dependent on which
    data engine is being used for the repository.</p>
  <ul id="forena-1" frx:block="forena_help/admin_topics">
    <li id="forena-2" frx:foreach="*"><span>{title}</span>
    </li>
  </ul>
</body>
</html>
